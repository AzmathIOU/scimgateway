{
  "scimgateway": {
    "scimversion": "1.1",
    "localhostonly": false,
    "port": 8882,
    "loglevel": {
      "file": "debug",
      "console": "error"
    },
    "auth": {
      "basic": {
        "username": "gwadmin",
        "password": "password"
      },
      "bearer": {
        "token": null,
        "jwt": {
          "azure": {
            "tenantIdGUID": null
          },
          "standard": {
            "secret": null,
            "publicKey": null,
            "options": {
              "issuer": null
            }
          }
        }
      }
    },
    "certificate": {
      "key": null,
      "cert": null,
      "ca": null,
      "pfx": {
        "bundle": null,
        "password": null
      }
    },
    "emailOnError": {
      "smtp": {
        "enabled": false,
        "host": null,
        "port": 587,
        "proxy": null,
        "authenticate": true,
        "username": null,
        "password": null,
        "sendInterval": 15,
        "to": null,
        "cc": null
      }
    }
  },
  "endpoint": {
    "username": "admin",
    "password": "password",
    "baseServiceEndpoint": "http://localhost:8089/forwardinc/services",
    "exploreUsers": {
      "service": "UserService",
      "method": "searchUsers"
    },
    "exploreGroups": {
      "service": "GroupService",
      "method": "searchGroup"
    },
    "createUser": {
      "service": "UserService",
      "method": "addUser"
    },
    "modifyUser": {
      "service": "UserService",
      "method": "modifyUser"
    },
    "deleteUser": {
      "service": "UserService",
      "method": "removeUser"
    },
    "getUser": {
      "service": "UserService",
      "method": "lookupUser"
    },
    "getGroup": {
      "service": "GroupService",
      "method": "lookupGroup"
    },
    "getGroupMembers": {
      "service": "GroupService",
      "method": "searchGroup"
    },
    "modifyGroupMembers": {
      "service": "GroupService",
      "method": "Defined inline - assignUserToGroup and removeUserFromGroup"
    },
    "getGroupUsers": {
      "service": "N/A",
      "method": "N/A"
    },
    "entity": {
      "clientA": {
        "userId": "1111",
        "key": "clientA.key",
        "cert": "clientA.cert"
      },
      "clientB": {
        "userId": "2222",
        "key": "clientB.key",
        "cert": "clientC.cert"
      }
    }
  }
}